// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/30/2022 17:22:04"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Bit4MultDisplay
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Bit4MultDisplay_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg RESET;
reg X0;
reg X1;
reg X2;
reg X3;
reg Y0;
reg Y1;
reg Y2;
reg Y3;
// wires                                               
wire D00;
wire D01;
wire D02;
wire D03;
wire D04;
wire D05;
wire D06;
wire D10;
wire D11;
wire D12;
wire D13;
wire D14;
wire D15;
wire D16;

// assign statements (if any)                          
Bit4MultDisplay i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.D00(D00),
	.D01(D01),
	.D02(D02),
	.D03(D03),
	.D04(D04),
	.D05(D05),
	.D06(D06),
	.D10(D10),
	.D11(D11),
	.D12(D12),
	.D13(D13),
	.D14(D14),
	.D15(D15),
	.D16(D16),
	.RESET(RESET),
	.X0(X0),
	.X1(X1),
	.X2(X2),
	.X3(X3),
	.Y0(Y0),
	.Y1(Y1),
	.Y2(Y2),
	.Y3(Y3)
);
initial 
begin 
#1000000 $finish;
end 

// X3
initial
begin
	X3 = 1'b0;
end 

// X2
initial
begin
	X2 = 1'b1;
end 

// X1
initial
begin
	X1 = 1'b0;
end 

// X0
initial
begin
	X0 = 1'b0;
end 

// Y3
initial
begin
	Y3 = 1'b0;
end 

// Y2
initial
begin
	Y2 = 1'b0;
end 

// Y1
initial
begin
	Y1 = 1'b1;
end 

// Y0
initial
begin
	Y0 = 1'b0;
end 

// RESET
initial
begin
	RESET = 1'b1;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #100000 1'b1;
	#100000;
end 
endmodule

